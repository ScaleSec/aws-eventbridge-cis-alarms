AWSTemplateFormatVersion: 2010-09-09
Description: Deploy CIS Benchmark Alerts as Eventbridge Rules

Resources:
# SNS Topic for Notifications
  CISAlertSNSTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: 'CIS-Alerts'
      TopicName: 'CIS-Alerts'

  CISAlertSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties: 
      PolicyDocument: 
        Version: '2012-10-17'
        Statement:
          - Sid: 'alleventbridge'
            Effect: 'Allow'
            Principal:
              Service: 
                - 'events.amazonaws.com'
            Action:
              - 'sns:Publish'
            Resource: !Ref CISAlertSNSTopic
          - Sid: 'allowusersubscriptions'
            Effect: 'Allow'
            Principal:
              AWS: '*'
            Action:
              - 'sns:GetTopicAttributes'
              - 'sns:SetTopicAttributes'
              - 'sns:AddPermission'
              - 'sns:RemovePermission'
              - 'sns:DeleteTopic'
              - 'sns:Subscribe'
              - 'sns:ListSubscriptionsByTopic'
              - 'sns:Publish'
              - 'sns:Receive'
            Resource: !Ref CISAlertSNSTopic
            Condition:
              StringLike:
                AWS:SourceOwner: !Ref AWS::AccountId
      Topics: 
        - !Ref CISAlertSNSTopic

  # Lambda For Remediation
  LambdaIAMRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Service: 
              - 'lambda.amazonaws.com'
          Action:
            - 'sts:AssumeRole'
      RoleName: cis_remediation_role
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSLambdaExecute'
        
  LambdaIAMPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: 'cis_remediation_lambda-policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Action:
            - 'cloudtrail:StartLogging'
          Resource: '*'
      Roles: 
        - !Ref LambdaIAMRole
  
  RemediationLambda:
    Type: AWS::Lambda::Function
    Properties: 
      Handler: 'remediate.lambda_handler'
      Role: !GetAtt LambdaIAMRole.Arn
      Code: '../lambda-src/'
      Runtime: 'python3.8'
      FunctionName: 'EventBridge-CIS-Remediation'

  LambdaExecutionPermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref RemediationLambda
      Principal: 'events.amazonaws.com'

  # Eventbridge rules and target configuration
  RuleCISAlert31:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-Unauthorized-API-Calls'
      Description: 'Respond to Unauthorized API Calls'
      EventPattern: 
        {
          "source": ["aws.cloudtrail"],
          "detail-type": ["AWS API Call via CloudTrail"],
          "errorCode": ["AccessDenied", "UnauthorizedOperation"]
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'

  RuleCISAlert32:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-Sign-In-Without-MFA'
      Description: 'Respond to Console login without MFA'
      EventPattern: 
        {
          "detail-type": ["AWS Console Sign In via CloudTrail"],
          "detail": {
            "additionalEventData": {
              "MFAUsed": ["No"]
            }
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'
 
  RuleCISAlert33:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-Root-Account-Usage'
      Description: 'Respond to Root Account Usage'
      EventPattern: 
        {
          "detail-type": ["AWS Console Sign In via CloudTrail"],
          "detail": {
            "userIdentity": {
              "type": ["Root"],
              "invokedBy": [ { "exists": false } ]
            },
            "eventType": [{ "anything-but": "AwsServiceEvent"}]
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'    

  RuleCISAlert34:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-IAM-Policy-Changes'
      Description: 'Respond to IAM Policy Changes'
      EventPattern: 
        {
          "source": ["aws.iam"],
          "detail-type": ["AWS API Call via CloudTrail"],
          "detail": {
            "eventSource": ["iam.amazonaws.com"],
            "eventName": [
              "DeleteGroupPolicy",
              "DeleteRolePolicy",
              "DeleteUserPolicy",
              "PutGroupPolicy",
              "PutRolePolicy",
              "PutUserPolicy",
              "CreatePolicy",
              "DeletePolicy",
              "CreatePolicyVersion",
              "DeletePolicyVersion",
              "AttachRolePolicy",
              "DetachRolePolicy",
              "AttachUserPolicy",
              "DetachUserPolicy",
              "AttachGroupPolicy",
              "DetachGroupPolicy"
            ]
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'   

  RuleCISAlert35:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-Cloudtrail-Changes'
      Description: 'Respond to Cloudtrail Changes'
      EventPattern: 
        {
          "source": ["aws.cloudtrail"],
          "detail-type": ["AWS API Call via CloudTrail"],
          "detail": {
            "eventSource": ["cloudtrail.amazonaws.com"],
            "eventName": [
              "CreateTrail",
              "UpdateTrail",
              "DeleteTrail",
              "StartLogging",
              "StopLogging"
            ]
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'

  RuleCISAlert36:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-Console-Login-Failures'
      Description: 'Respond to Console Login Failures'
      EventPattern: 
        {
          "detail-type": ["AWS Console Sign In via CloudTrail"],
          "detail": {
            "responseElements": {
              "ConsoleLogin": ["Failure"]
            }
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'

  RuleCISAlert37:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-KMS-CMK-Deletions'
      Description: 'Respond to KMS CMK Deletion Actions'
      EventPattern: 
        {
          "source": ["aws.kms"],
          "detail-type": ["AWS API Call via CloudTrail"],
          "detail": {
            "eventSource": ["kms.amazonaws.com"],
            "eventName": [
              "DisableKey",
              "ScheduleKeyDeletion"
            ]
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'

  RuleCISAlert38:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-S3-Bucket-Policy-Changes'
      Description: 'Respond to S3 Bucket Policy Changes'
      EventPattern: 
        {
          "source": ["aws.s3"],
          "detail-type": ["AWS API Call via CloudTrail"],
          "detail": {
            "eventSource": ["s3.amazonaws.com"],
            "eventName": [
              "PutBucketAcl",
              "PutBucketPolicy",
              "PutBucketCors",
              "PutBucketLifecycle",
              "PutBucketReplication",
              "DeleteBucketPolicy",
              "DeleteBucketCors",
              "DeleteBucketLifecycle",
              "DeleteBucketReplication"
            ]
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'

  RuleCISAlert39:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-AWSConfig-Changes'
      Description: 'Respond to AWS Config Service Changes'
      EventPattern: 
        {
          "source": ["aws.config"],
          "detail-type": ["AWS API Call via CloudTrail"],
          "detail": {
            "eventSource": ["config.amazonaws.com"],
            "eventName": [
              "StopConfigurationRecorder",
              "DeleteDeliveryChannel",
              "PutDeliveryChannel",
              "PutConfigurationRecorder"
            ]
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'

  RuleCISAlert310:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-Security-Group-Changes'
      Description: 'Respond to Security Group Changes'
      EventPattern: 
        {
          "source": ["aws.ec2"],
          "detail-type": ["AWS API Call via CloudTrail"],
          "detail": {
            "eventSource": ["ec2.amazonaws.com"],
            "eventName": [
              "AuthorizeSecurityGroupIngress",
              "AuthorizeSecurityGroupEgress",
              "RevokeSecurityGroupIngress",
              "RevokeSecurityGroupEgress",
              "CreateSecurityGroup",
              "DeleteSecurityGroup"
            ]
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'

  RuleCISAlert311:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-NACL-Changes'
      Description: 'Respond to NACL Changes'
      EventPattern: 
        {
          "source": ["aws.ec2"],
          "detail-type": ["AWS API Call via CloudTrail"],
          "detail": {
            "eventSource": ["ec2.amazonaws.com"],
            "eventName": [
              "CreateNetworkAcl",
              "CreateNetworkAclEntry",
              "DeleteNetworkAcl",
              "DeleteNetworkAclEntry",
              "ReplaceNetworkAclEntry",
              "ReplaceNetworkAclAssociation"
            ]
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'

  RuleCISAlert312:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-Network-Gateway-Changes'
      Description: 'Respond to Network Gateway Changes'
      EventPattern: 
        {
          "source": ["aws.ec2"],
          "detail-type": ["AWS API Call via CloudTrail"],
          "detail": {
            "eventSource": ["ec2.amazonaws.com"],
            "eventName": [
              "CreateCustomerGateway",
              "DeleteCustomerGateway",
              "AttachInternetGateway",
              "CreateInternetGateway",
              "DeleteInternetGateway",
              "DetachInternetGateway"
            ]
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'

  RuleCISAlert313:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-Route-Table-Changes'
      Description: 'Respond to VPC Route Table Changes'
      EventPattern: 
        {
          "source": ["aws.ec2"],
          "detail-type": ["AWS API Call via CloudTrail"],
          "detail": {
            "eventSource": ["ec2.amazonaws.com"],
            "eventName": [
              "CreateRoute",
              "CreateRouteTable",
              "ReplaceRoute",
              "ReplaceRouteTableAssociation",
              "DeleteRouteTable",
              "DeleteRoute",
              "DisassociateRouteTable"
            ]
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'

  RuleCISAlert314:
    Type: AWS::Events::Rule
    Properties: 
      Name: 'CIS-Alert-VPC-Changes'
      Description: 'Respond to VPC Changes'
      EventPattern: 
        {
          "source": ["aws.ec2"],
          "detail-type": ["AWS API Call via CloudTrail"],
          "detail": {
            "eventSource": ["ec2.amazonaws.com"],
            "eventName": [
              "CreateVpc",
              "DeleteVpc",
              "ModifyVpcAttribute",
              "AcceptVpcPeeringConnection",
              "CreateVpcPeeringConnection",
              "DeleteVpcPeeringConnection",
              "RejectVpcPeeringConnection",
              "AttachClassicLinkVpc",
              "DetachClassicLinkVpc",
              "DisableVpcClassicLink",
              "EnableVpcClassicLink"
            ]
          }
        }
      Targets: 
        - 
          Arn: !GetAtt RemediationLambda.Arn
          Id: 'SendToLambda'
        -
          Arn: !Ref CISAlertSNSTopic
          Id: 'SendToSNS'